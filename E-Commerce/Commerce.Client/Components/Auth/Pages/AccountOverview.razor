@page "/account"

@inject IUserService UserService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<RefreshToken />
<RestrictAccess />

<MudContainer Class="d-flex flex-wrap align-content-center gap-2">
    <MudAvatar Color="Color.Primary">@user?.Initials</MudAvatar>
    <h1 class="d-flex align-center">@user?.FullName</h1>
</MudContainer>

<MudContainer Class="pt-16">
    <EditForm Model="Model" OnValidSubmit="Submit">
        <DataAnnotationsValidator />

        <MudGrid Class="d-flex justify-center">
            <MudItem xs="12" sm="7">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="First name" Disabled="isViewing" HelperText="Max. 50 characters" @bind-Value="Model.FirstName" For="@(() => Model.FirstName)"/>
                        <MudTextField Label="Last name" Disabled="isViewing" HelperText="Max. 50 characters" @bind-Value="Model.LastName" For="@(() => Model.LastName)"/>
                        <MudTextField Label="Email address" Disabled="true" @bind-Value="EmailAddress"/>
                    </MudCardContent>

                    <MudCardActions>
                        @if (isViewing)
                        {
                            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" @onclick="() => isViewing = false">Edit</MudButton>
                        }
                        else
                        {
                            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Text" Color="Color.Primary" Class="mr-auto" @onclick="() => ResetForm()">Cancel</MudButton>
                            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                        }
                    </MudCardActions>
                </MudCard>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudContainer>